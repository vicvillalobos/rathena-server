// ===================================================================
// Mapa  : prontera (154,180)
// Sprite: 416 (4_M_REPAIRMAN)
// Slots refinables considerados: Armor - R-Hand - L-Hand - Shoes - Garment
// ===================================================================
prontera,154,180,5	script	Refinador PRO	416,{

	//---------------------------------------------------------------
	// 1) LISTAR ÍTEMS EQUIPADOS REFINABLES
	//---------------------------------------------------------------
	mes "[Refinador]";
	mes "Ítems refinables equipados:";

	setarray .@slots[0], EQI_ARMOR, EQI_HAND_R, EQI_HAND_L, EQI_SHOES, EQI_GARMENT;
	set .@cnt,0;
	for (.@i=0;.@i<getarraysize(.@slots);.@i++){
		.@s = .@slots[.@i];
		.@id = getequipid(.@s);
		.@r  = getequiprefinerycnt(.@s);
		if (.@id<=0 || .@r==-1) continue; // vacío o no-refinable
		setarray .@slot_eq[.@cnt],  .@s;
		setarray .@id_eq[.@cnt],    .@id;
		setarray .@r_eq[.@cnt],     .@r;
		setarray .@name$[.@cnt],    getitemname(.@id)+" [+"+.@r+"]";
		.@cnt++;
	}
	if (!.@cnt){ mes "Nada refinable."; close; }

	//---------------------------------------------------------------
	// 2) MENÚ
	//---------------------------------------------------------------
	next;
	set .@m$,"";
	for (.@j=0;.@j<.@cnt;.@j++) .@m$ += .@name$[.@j] + ((.@j<.@cnt-1)?":":"");
	set .@pick, select(.@m$) - 1;

	set .@slot_sel, .@slot_eq[.@pick];
	set .@id_sel,   .@id_eq[.@pick];
	set .@r_now,    .@r_eq[.@pick];

	//---------------------------------------------------------------
	// 3) NIVEL META
	//---------------------------------------------------------------
	mes "Seleccionaste:^0000FF "+getitemname(.@id_sel)+"^000000 (+"+.@r_now+")";
	mes "¿Hasta qué refine deseas llegar?";
	input .@goal, .@r_now+1, 10;

	//---------------------------------------------------------------
	// 4) MODO: SOLO EQUIPADO / TODOS
	//---------------------------------------------------------------
	set .@mode,1;
	set .@extra, countitem(.@id_sel); // copias en inventario
	if (.@extra){
		mes "Copias adicionales: "+.@extra;
		next;
		set .@mode, select("Sólo equipado:Todos");
	}

	//---------------------------------------------------------------
	// 5) REFINAR EQUIPADO
	//---------------------------------------------------------------
	callsub RefinaOne, .@slot_sel, .@goal;

	//---------------------------------------------------------------
	// 6) REFINAR COPIAS
	//---------------------------------------------------------------
	if (.@mode == 2){
		set .@done,0;
		while (countitem(.@id_sel) > 0){

			// buscar índice de una copia válida
			getinventorylist;
			set .@idx, -1;
			set .@equip_flag, 0;
			for (.@i=0;.@i<@inventorylist_count;.@i++){
				if (@inventorylist_id[.@i] == .@id_sel){
					.@idx = @inventorylist_idx[.@i];
					.@equip_flag = @inventorylist_equip[.@i];
					break;
				}
			}
			if (.@idx == -1) break; // sin más copias

			// ¿esa copia puede ir en el slot deseado?
			if (!(.@equip_flag & (1<<.@slot_sel))) { delitem .@id_sel,1; continue; }

			// liberar el slot si hay algo
			if (getequipid(.@slot_sel)) unequip .@slot_sel;

			// intentar equipar
			equip .@idx;
			if (getequipid(.@slot_sel) != .@id_sel){
				dispbottom "No se pudo equipar una copia; se salta.";
				delitem .@id_sel,1; // evitar loop infinito
				continue;
			}

			// refinar la copia
			callsub RefinaOne, .@slot_sel, .@goal;

			// quitar la copia (esté +N o rota – ya no está en equip)
			if (getequipid(.@slot_sel)) unequip .@slot_sel;

			.@done++;
		}
		mes .@done+" copia(s) procesadas.";
	}

	mes "Proceso finalizado.";
	close;

//------------------------------------------------------------------
// Sub-rutina RefinaOne
//   Entrada: slot, goal
//------------------------------------------------------------------
RefinaOne:
	.@s  = getarg(0);
	.@goal = getarg(1);
	.@id = getequipid(.@s);
	if (!.@id) end;            // nada equipado

	.@typ = getiteminfo(.@id, ITEMINFO_TYPE);
	.@lvl = getiteminfo(.@id, ITEMINFO_EQUIP_LEVEL);

	while (getequiprefinerycnt(.@s) < .@goal){

		// mineral
		if (.@typ == IT_ARMOR)          set .@mat, 985;
		else if (.@lvl == 1)            set .@mat, 1010;
		else if (.@lvl == 2)            set .@mat, 1011;
		else                            set .@mat, 984;

		if (countitem(.@mat) < 1){
			dispbottom "[FALTA] "+getitemname(.@mat);
			end;
		}
		delitem .@mat, 1;

		.@cur  = getequiprefinerycnt(.@s);
		.@rate = callsub(RateCalc, .@typ, .@lvl, .@cur);

		if (rand(100) < .@rate){
			successrefitem .@s;
			dispbottom "[ÉXITO] "+getitemname(.@id)+" -> +"+(.@cur+1);
		}else{
			failedrefitem .@s;
			dispbottom "[ROTO] "+getitemname(.@id);
			end; // continúa con siguientes copias
		}
	}
	end;

//------------------------------------------------------------------
// Sub-rutina de rates (tabla proporcionada)
//------------------------------------------------------------------
RateCalc:
	.@t = getarg(0); .@lvl = getarg(1); .@cur = getarg(2);

	if (.@t == IT_ARMOR){
		switch (.@cur){
			case 4: return 60; case 5: return 40; case 6: return 30;
			case 7: return 20; case 8: return 10; case 9: return 5;
			default: return 100;
		}
	}

	switch (.@cur){
		case 4: return (.@lvl == 4)? 50 : 100;
		case 5: return (.@lvl == 4)? 40 : ((.@lvl == 3)? 50 : 100);
		case 6: if (.@lvl == 1) return 100; if (.@lvl == 2) return 60; return 30;
		case 7:
			if (.@lvl == 1) return 60;
			if (.@lvl == 2) return 40;
			if (.@lvl == 3) return 20;
			return 15;
		case 8:
			if (.@lvl == 1) return 40;
			if (.@lvl == 2) return 20;
			if (.@lvl == 3) return 15;
			return 10;
		case 9:
			if (.@lvl <= 2) return 20;
			if (.@lvl == 3) return 10;
			return 5;
		default: return 100;
	}
} // FIN NPC
