prontera,150,180,4	script	TestShield	413,{
	.@id = getequipid(EQI_HAND_L);
	if (.@id > 0)
		mes "Tienes equipado en mano izquierda: " + getitemname(.@id);
	else
		mes "Nada equipado en mano izquierda.";
	close;
}

prontera,152,180,4	script	DebugRefinable	415,{
	.@slot = EQI_HAND_L;
	.@id = getequipid(.@slot);
	mes "ID: " + .@id;
	mes "Type: " + getiteminfo(.@id, ITEMINFO_TYPE);
	mes "Equip Level: " + getiteminfo(.@id, ITEMINFO_EQUIP_LEVEL);
	mes "Refine: " + getequiprefinerycnt(.@slot);
	close;
}

prontera,155,180,4	script	Refinador PRO	416,{

	mes "[Refinador PRO]";
	mes "Estos son los ítems refinables que tienes equipados:";

	// Sólo slots físicos clásicos que pediste
	setarray .@equip_slots[0], EQI_HEAD_TOP, EQI_ARMOR, EQI_HAND_R, EQI_HAND_L, EQI_GARMENT, EQI_SHOES;

	set .@count, 0;
	for (.@i = 0; .@i < getarraysize(.@equip_slots); .@i++) {
		set .@slot, .@equip_slots[.@i];
		set .@id, getequipid(.@slot);
		if (.@id <= 0) continue;

		// NUEVO: eliminar filtro por tipo
		// Solo verifica que tenga refine > -1
		if (getequiprefinerycnt(.@slot) == -1) continue;

		set .@refine, getequiprefinerycnt(.@slot);
		setarray .@slots[.@count], .@slot;
		setarray .@ids[.@count], .@id;
		setarray .@names$[.@count], getitemname(.@id) + " [+" + .@refine + "]";
		.@count++;
	}

	if (.@count == 0) {
		mes "No tienes ítems refinables equipados.";
		close;
	}

	next;
	set .@select, select(.@names$) - 1;
	set .@slot_sel, .@slots[.@select];
	set .@id_sel, .@ids[.@select];
	set .@refine_current, getequiprefinerycnt(.@slot_sel);

	mes "Seleccionaste: ^0000FF" + getitemname(.@id_sel) + "^000000 (+" + .@refine_current + ")";
	mes "¿A qué nivel quieres refinarlo?";
	input .@refine_target, .@refine_current + 1, 10;

	next;
	mes "¿Deseas refinar solo este ítem o todos los equipados refinables?";
	next;
	set .@modo, select("Sólo este ítem:Todos los equipados refinables");

	if (.@modo == 1) {
		callsub L_Refina, .@slot_sel, .@refine_target;
	} else {
		for (.@i = 0; .@i < .@count; .@i++) {
			callsub L_Refina, .@slots[.@i], .@refine_target;
		}
	}

	mes "Proceso de refinamiento completo.";
	close;

// ------------------------------
// SUB: Refinar un slot
// ------------------------------
L_Refina:
	.@slot = getarg(0);
	.@target = getarg(1);
	.@id = getequipid(.@slot);
	.@ref = getequiprefinerycnt(.@slot);

	// Material: Elunium si es armadura, Oridecon si es arma. Default = Elunium
	.@type = getiteminfo(.@id, ITEMINFO_TYPE);
	if (.@type == IT_ARMOR)
		set .@mat_id, 985; // Elunium
	else
		set .@mat_id, 984; // Oridecon

	while (.@ref < .@target) {
		if (countitem(.@mat_id) < 1) {
			dispbottom "Falta material: " + getitemname(.@mat_id);
			return;
		}
		delitem .@mat_id, 1;

		set .@rate, callfunc("RefineRateFromTable", .@type, .@ref);
		if (rand(100) < .@rate) {
			successrefitem .@slot;
			.@ref++;
			dispbottom getitemname(.@id) + " refinado con éxito a +" + .@ref;
		} else {
			failedrefitem(.@slot);
			dispbottom getitemname(.@id) + " falló el refine y se destruyó.";
			return;
		}
	}
	return;
}

// ------------------------------
// Rates de refine reales
// ------------------------------
function	script	RefineRateFromTable	{
	.@type = getarg(0);
	.@ref = getarg(1);

	switch (.@ref) {
		case 4: return (.@type == IT_ARMOR) ? 60 : 100;
		case 5: return (.@type == IT_ARMOR) ? 40 : 100;
		case 6: return (.@type == IT_ARMOR) ? 30 : 100;
		case 7: return (.@type == IT_ARMOR) ? 20 : 60;
		case 8: return (.@type == IT_ARMOR) ? 10 : 40;
		case 9: return (.@type == IT_ARMOR) ? 5  : 20;
		default: return 100;
	}
}
