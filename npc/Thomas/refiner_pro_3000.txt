// ===============================================================
// NPC : Refinador PRO
// Map : prontera 154 180   |   Sprite 416 (4_M_REPAIRMAN)
// Slots revisados: Armor – R-Hand – L-Hand – Garment – Shoes
// ===============================================================
prontera,154,180,5	script	Refinador PRO	416,{

	//----------------------------------------------------------
	// 1. CENSO DE ÍTEMS REFINABLES EQUIPADOS
	//----------------------------------------------------------
	mes "[Refinador]";
	mes "Ítems refinables equipados:";

	setarray .@chk[0], EQI_ARMOR, EQI_HAND_R, EQI_HAND_L, EQI_GARMENT, EQI_SHOES;
	set .@cnt,0;
	for (.@i = 0; .@i < getarraysize(.@chk); .@i++) {
		.@slot = .@chk[.@i];
		.@id   = getequipid(.@slot);
		.@rfn  = getequiprefinerycnt(.@slot);
		if (.@id <= 0 || .@rfn == -1) continue;
		setarray .@slot_eq[.@cnt],  .@slot;
		setarray .@id_eq[.@cnt],    .@id;
		setarray .@ref_eq[.@cnt],   .@rfn;
		setarray .@name_eq$[.@cnt], getitemname(.@id)+" [+"+.@rfn+"]";
		.@cnt++;
	}
	if (!.@cnt) { mes "No llevas nada refinable."; close; }

	//----------------------------------------------------------
	// 2. MENÚ DE SELECCIÓN
	//----------------------------------------------------------
	next;
	set .@menu$, "";
	for (.@j = 0; .@j < .@cnt; .@j++)
		.@menu$ += .@name_eq$[.@j] + ((.@j < .@cnt-1) ? ":" : "");

	set .@pick,  select(.@menu$) - 1;
	set .@slot_sel, .@slot_eq[.@pick];
	set .@id_sel,   .@id_eq[.@pick];
	set .@rfn_now,  .@ref_eq[.@pick];

	mes "Item:^0000FF "+getitemname(.@id_sel)+"^000000  (+"+.@rfn_now+")";
	mes "¿Refine final deseado?";
	input .@goal, .@rfn_now+1, 10;

	//----------------------------------------------------------
	// 3. ¿SOLO EQUIPADO O TODAS LAS COPIAS?
	//----------------------------------------------------------
	set .@mode, 1;                       // 1 = solo equipado
	set .@extra, countitem(.@id_sel);    // copias en inventario
	if (.@extra) {
		mes "Copias adicionales: "+.@extra;
		next;
		set .@mode, select("Sólo equipado:Todos");
	}

	//----------------------------------------------------------
	// 4. REFINAR EL EQUIPADO
	//----------------------------------------------------------
	callsub RefinaCopy, .@slot_sel, .@goal, .@id_sel;

	//----------------------------------------------------------
	// 5. REFINAR TODAS LAS COPIAS DEL INVENTARIO
	//----------------------------------------------------------
	if (.@mode == 2) {
		set .@done, 0;
		while (countitem(.@id_sel) > 0) {

			getinventorylist;
			set .@idx, -1;
			set .@flag, 0;
			for (.@i = 0; .@i < @inventorylist_count; .@i++) {
				if (@inventorylist_id[.@i] == .@id_sel) {
					.@idx  = @inventorylist_idx[.@i];
					.@flag = @inventorylist_equip[.@i];
					break;
				}
			}
			if (.@idx == -1) break;                       // no quedan
			if (!( .@flag & (1 << .@slot_sel) )) {        // no se puede equipar en este slot
				delitem .@id_sel, 1;                      // descartar para no ciclar
				continue;
			}

			if (getequipid(.@slot_sel)) unequip .@slot_sel;   // liberar slot
			equip .@idx;
			if (getequipid(.@slot_sel) != .@id_sel) {        // equip falló
				delitem .@id_sel, 1;
				continue;
			}

			callsub RefinaCopy, .@slot_sel, .@goal, .@id_sel;
			.@done++;
		}
		mes .@done+" copia(s) procesadas.";
	}
	mes "Proceso de refinamiento terminado.";
	close;

	//==========================================================
	// RefinaCopy : refina UNA pieza (la que está en 'slot')
	//==========================================================
RefinaCopy:
	.@slot = getarg(0);
	.@goal = getarg(1);
	.@id   = getarg(2);

	// Si ya no está equipado (quizá se rompió), salir
	if (getequipid(.@slot) != .@id) end;

	.@typ = getiteminfo(.@id, ITEMINFO_TYPE);
	.@lvl = getiteminfo(.@id, ITEMINFO_EQUIP_LEVEL);

	while (getequiprefinerycnt(.@slot) < .@goal) {

		// mineral
		if (.@typ == IT_ARMOR)              set .@mat, 985;       // Elunium
		else if (.@lvl == 1)                set .@mat, 1010;      // Phracon
		else if (.@lvl == 2)                set .@mat, 1011;      // Emveretarcon
		else                                set .@mat, 984;       // Oridecon

		if (countitem(.@mat) < 1) {
			dispbottom "[FALTA] "+getitemname(.@mat);
			break;
		}
		delitem .@mat, 1;

		.@cur  = getequiprefinerycnt(.@slot);
		.@rate = callsub RateCalc, .@typ, .@lvl, .@cur;

		if (rand(100) < .@rate) {
			successrefitem .@slot;
			dispbottom "[ÉXITO] "+getitemname(.@id)+" -> +"+(.@cur+1);
		} else {
			failedrefitem .@slot;
			dispbottom "[ROTO] "+getitemname(.@id);
			break;
		}
	}

	// Liberar slot si la pieza sigue ahí
	if (getequipid(.@slot) == .@id) unequip .@slot;
	end;

	//==========================================================
	// RateCalc – devuelve el % de éxito según tu tabla
	//==========================================================
RateCalc:
	.@t   = getarg(0);
	.@lvl = getarg(1);
	.@cur = getarg(2);

	if (.@t == IT_ARMOR) {
		switch (.@cur) {
			case 4: return 60; case 5: return 40; case 6: return 30;
			case 7: return 20; case 8: return 10; case 9: return 5;
			default: return 100;
		}
	}

	switch (.@cur) {
		case 4: return (.@lvl == 4)? 50 : 100;
		case 5: return (.@lvl == 4)? 40 : ((.@lvl == 3)? 50 : 100);
		case 6: if (.@lvl == 1) return 100; if (.@lvl == 2) return 60; return 30;
		case 7:
			if (.@lvl == 1) return 60;
			if (.@lvl == 2) return 40;
			if (.@lvl == 3) return 20;
			return 15;
		case 8:
			if (.@lvl == 1) return 40;
			if (.@lvl == 2) return 20;
			if (.@lvl == 3) return 15;
			return 10;
		case 9:
			if (.@lvl <= 2) return 20;
			if (.@lvl == 3) return 10;
			return 5;
		default: return 100;
	}
} // FIN NPC
