// ===============================================================
// NPC : Refinador PRO 3000
// Autor : Thomas / ChatGPT Fix
// Mapa  : prontera (154,180)  Sprite 416 (4_M_REPAIRMAN)
// ===============================================================
prontera,154,180,5	script	Refinador PRO	416,{

	//----------------------------------------------------------
	// 1) LISTAR ÍTEMS REFINABLES EQUIPADOS
	//----------------------------------------------------------
	mes "[Refinador PRO]";
	setarray .@chk[0], EQI_ARMOR, EQI_HAND_R, EQI_HAND_L, EQI_GARMENT, EQI_SHOES;
	set .@cnt, 0;

	for (.@i = 0; .@i < getarraysize(.@chk); .@i++) {
		.@slot = .@chk[.@i];
		.@id   = getequipid(.@slot);
		.@rfn  = getequiprefinerycnt(.@slot);   // -1 → no refinable
		if (.@id <= 0 || .@rfn == -1) continue;

		setarray .@slot_eq[.@cnt],  .@slot;
		setarray .@id_eq[.@cnt],    .@id;
		setarray .@ref_eq[.@cnt],   .@rfn;
		setarray .@name_eq$[.@cnt], getitemname(.@id) + " [+" + .@rfn + "]";
		.@cnt++;
	}
	if (!.@cnt) { mes "No llevas nada refinable."; close; }

	//----------------------------------------------------------
	// 2) MENÚ DE SELECCIÓN
	//----------------------------------------------------------
	next;
	set .@menu$, "";
	for (.@j = 0; .@j < .@cnt; .@j++)
		.@menu$ += .@name_eq$[.@j] + ((.@j < .@cnt - 1) ? ":" : "");

	set .@pick,  select(.@menu$) - 1;
	set .@slot_sel, .@slot_eq[.@pick];
	set .@id_sel,   .@id_eq[.@pick];
	set .@rfn_now,  .@ref_eq[.@pick];

	mes "Ítem:^0000FF " + getitemname(.@id_sel) + "^000000 (+" + .@rfn_now + ")";
	mes "¿Refinamiento deseado?";
	input .@goal, .@rfn_now + 1, 10;

	//----------------------------------------------------------
	// 3) ¿SÓLO EQUIPADO O TODAS LAS COPIAS?
	//----------------------------------------------------------
	set .@mode, 1;   // 1 = sólo equipado
	set .@extra, countitem(.@id_sel);
	if (.@extra) {
		mes "Copias adicionales en inventario: " + .@extra;
		next;
		set .@mode, select("Sólo el equipado:Todos (equipo + inventario)");
	}

	//----------------------------------------------------------
	// 4) REFINAR LA PIEZA EQUIPADA
	//----------------------------------------------------------
	callsub RefinaCopy, .@slot_sel, .@goal, .@id_sel;

	//----------------------------------------------------------
	// 5) REFINAR TODAS LAS COPIAS
	//----------------------------------------------------------
	if (.@mode == 2) {
		set .@done, 0;

		while (countitem(.@id_sel) > 0) {

			// Asegura que el slot esté libre antes de buscar la siguiente copia
			if (getequipid(.@slot_sel)) unequip .@slot_sel;

			// Refresca inventario y localiza la próxima copia
			getinventorylist;
			set .@idx, -1;
			for (.@i = 0; .@i < @inventorylist_count; .@i++) {
				if (@inventorylist_id[.@i] == .@id_sel) {      // mismo itemID
					.@idx = @inventorylist_index[.@i];          // índice REAL
					break;
				}
			}
			if (.@idx == -1) break; // No quedan más copias

			// Intenta equipar
			equip .@idx;
			if (getequipid(.@slot_sel) != .@id_sel) break; // por seguridad

			callsub RefinaCopy, .@slot_sel, .@goal, .@id_sel;
			.@done++;
		}
		mes .@done + " copia(s) procesadas.";
	}

	mes "Proceso de refinamiento terminado.";
	close;

	//----------------------------------------------------------
	// ► RefinaCopy – procesa UNA pieza actualmente equipada
	//----------------------------------------------------------
RefinaCopy:
	.@slot = getarg(0);
	.@goal = getarg(1);
	.@id   = getarg(2);

	if (getequipid(.@slot) != .@id) return;

	.@typ = getiteminfo(.@id, ITEMINFO_TYPE);
	.@lvl = getiteminfo(.@id, ITEMINFO_EQUIP_LEVEL);

	while (getequiprefinerycnt(.@slot) < .@goal) {

		// Define material según tipo / nivel de arma
		if (.@typ == IT_ARMOR)       set .@mat, 985;      // Elunium
		else if (.@lvl == 1)         set .@mat, 1010;     // Phracon
		else if (.@lvl == 2)         set .@mat, 1011;     // Emveretarcon
		else                         set .@mat, 984;      // Oridecon

		if (countitem(.@mat) < 1) { dispbottom "[FALTA] " + getitemname(.@mat); break; }
		delitem .@mat, 1;

		.@cur  = getequiprefinerycnt(.@slot);
		.@rate = callsub( RateCalc, .@typ, .@lvl, .@cur );

		if (rand(100) < .@rate) {
			successrefitem .@slot;
			dispbottom "[ÉXITO] " + getitemname(.@id) + " -> +" + (.@cur + 1);
		} else {
			failedrefitem .@slot;
			dispbottom "[ROTO]  " + getitemname(.@id);
			break;
		}
	}

	// Sale equipada o rota; siempre dejar libre el slot
	if (getequipid(.@slot) == .@id) unequip .@slot;
	return;

	//----------------------------------------------------------
	// ► RateCalc – devuelve % de éxito (simplificado)
	//----------------------------------------------------------
RateCalc:
	.@t   = getarg(0);
	.@lvl = getarg(1);
	.@cur = getarg(2);

	if (.@t == IT_ARMOR) {
		switch (.@cur) {
			case 4: return 60;
			case 5: return 40;
			case 6: return 30;
			case 7: return 20;
			case 8: return 10;
			case 9: return 5;
			default: return 100;
		}
	}

	switch (.@cur) {
		case 4: return (.@lvl == 4) ? 50 : 100;
		case 5: return (.@lvl == 4) ? 40 : ((.@lvl == 3) ? 50 : 100);
		case 6: if (.@lvl == 1) return 100; if (.@lvl == 2) return 60; return 30;
		case 7:
			if (.@lvl == 1) return 60;
			if (.@lvl == 2) return 40;
			if (.@lvl == 3) return 20;
			return 15;
		case 8:
			if (.@lvl == 1) return 40;
			if (.@lvl == 2) return 20;
			if (.@lvl == 3) return 15;
			return 10;
		case 9:
			if (.@lvl <= 2) return 20;
			if (.@lvl == 3) return 10;
			return 5;
		default: return 100;
	}
} // FIN NPC
