//==============================================================
// NPC :	Refinador Batch (sin UI) – v1.4-T	2025-05-22
//==============================================================
prontera,156,180,5	script	Refinador Batch	416,{

	//----------------------------------------------------------
	// 1) Mostrar ítems equipados refinables
	//----------------------------------------------------------
	mes	"[Refinador]";
	setarray	.@slots[0],	EQI_HEAD_TOP,	EQI_ARMOR,	EQI_HAND_R,	EQI_HAND_L,	EQI_GARMENT,	EQI_SHOES,	EQI_HEAD_MID,	EQI_HEAD_LOW;
	for (.@i = 0; .@i < getarraysize(.@slots); .@i++) {
		.@slot	= .@slots[.@i];
		.@id	= getequipid(.@slot);
		.@rfn	= getequiprefinerycnt(.@slot);
		if (.@id <= 0 || .@rfn == -1)	continue;

		.@slot_a[.@n]	= .@slot;
		.@id_a[.@n]		= .@id;
		.@rfn_a[.@n]	= .@rfn;
		.@menu$	+= getitemname(.@id) + "  [+"+.@rfn+"]:";
		.@n++;
	}
	if (!.@n) { mes "No llevas nada que pueda refinar."; close; }

	//----------------------------------------------------------
	// 2) Elegir pieza + refine meta
	//----------------------------------------------------------
	.@pick		= select(.@menu$) - 1;
	.@slotSel	= .@slot_a[.@pick];
	.@idSel		= .@id_a[.@pick];
	.@curRef	= .@rfn_a[.@pick];

	mes	"Ítem:^0080FF "+getitemname(.@idSel)+"^000000 (+"+.@curRef+")";
	mes	"¿A qué nivel de refine quieres llegar?";
	input	.@goal,	.@curRef+1,	10;
	if (.@goal <= .@curRef) { mes "Debe ser mayor al refine actual."; close; }

	//----------------------------------------------------------
	// 3) ¿Sólo equipado o todas las copias?
	//----------------------------------------------------------
	.@invCopies	= countitem(.@idSel);
	.@mode	= 1;
	if (.@invCopies) {
		mes	"Copias en inventario: ^FFA500"+.@invCopies+"^000000";
		next;
		.@mode	= select("Sólo el equipado:Refinar todo (equipo + copias)");
	}

	//----------------------------------------------------------
	// 4) Refinar la pieza equipada
	//----------------------------------------------------------
	callsub(RefinaUno,	.@slotSel,	.@goal);

	//----------------------------------------------------------
	//   Modo 2 – Refino en batch con límite fijo
	//----------------------------------------------------------
	if (.@mode == 2) {
		.@total      = countitem(.@idSel);
		.@procesadas = 0;
		enable_items;

		for (.@i = 0; .@i < .@total; .@i++) {
			//dispbottom "[DBG] Iteración "+(.@i+1)+"/"+.@total;

			// 1) Equipamos la siguiente copia por ID
			equip .@idSel;  // equipa siempre la primera instancia :contentReference[oaicite:0]{index=0}
			sleep2 200;
			if (getequipid(.@slotSel) != .@idSel) {
				//dispbottom "[Error] falló equipar ID="+.@idSel;
				continue;
			}

			// 2) Refinamos y capturamos el plus final
			.@lastRef = callsub(RefinaUno, .@slotSel, .@goal);
			//dispbottom "[DBG] +"+.@lastRef+" alcanzado en esta copia";

			// 3) Si llegamos al objetivo, rompemos y salimos
			if (.@lastRef >= .@goal) {
				//dispbottom "[DBG] ¡Meta +"+.@goal+" alcanzada! Terminando batch.";
				break;
			}

			// 4) Rotamos la copia refinada al final (solo si está equipada)
			if (getequipid(.@slotSel) > 0) {
				//dispbottom "[DBG] Desequipando slotSel=" + .@slotSel;
				unequip .@slotSel;
				sleep2 600;
			}

			.@procesadas++;
		}

		disable_items;
		//dispbottom "[DBG] Batch finalizado – procesadas="+.@procesadas;
	}


	mes	"[Refinador] Trabajo finalizado.";
	close;

	//----------------------------------------------------------
	// ■ RefinaUno – refina la pieza equipada
	//----------------------------------------------------------
RefinaUno:
	.@slot = getarg(0);
    .@goal = getarg(1);
    .@id   = getequipid(.@slot);
    if (!.@id) return;

	.@tipo = getiteminfo(.@id, ITEMINFO_TYPE);
	if (.@tipo == 5) {    // 5 → arma
		.@lvlA = getiteminfo(.@id, ITEMINFO_WEAPONLEVEL);
	}
	else if (.@tipo == 4) { // 4 → armadura
		.@lvlA = getiteminfo(.@id, ITEMINFO_ARMORLEVEL);
	}
	else {
		.@lvlA = 4; // grupo por defecto
	}
	//dispbottom	"[Item Level] "+.@lvlA;
	//dispbottom	"[Item Type] "+.@tipo;

	while (getequiprefinerycnt(.@slot) < .@goal) {

		if (.@tipo == IT_ARMOR)		set .@mat,	985;
		else if (.@lvlA == 1)		set .@mat,	1010;
		else if (.@lvlA == 2)		set .@mat,	1011;
		else						set .@mat,	984;

		if (countitem(.@mat) < 1) {
			//dispbottom "[Falta] "+getitemname(.@mat);
			break;
		}
		delitem	.@mat,	1;

		.@act	= getequiprefinerycnt(.@slot);
		.@rate	= callsub(Rate,	.@tipo,	.@lvlA,	.@act);
		.@randomnum = rand(100);

		//dispbottom	"[RATE] "+.@rate+" -> [RAND] "+.@randomnum;
		if (.@randomnum < .@rate) {
			successrefitem	.@slot;
			//dispbottom	"[OK] "+getitemname(.@id)+" -> +"+(.@act+1);
		} else {
			failedrefitem	.@slot;
			//dispbottom	"[ROTO] "+getitemname(.@id);
			break;
		}
	}
	// Mostrar refine final justo antes de salir
    .@finalRef = getequiprefinerycnt(.@slot);
    //dispbottom "[DBG] Refine final for idx=" + .@slot + " = +" + .@finalRef;

    // 2) Guardamos el refine final en .@lastRef
	.@lastRef = getequiprefinerycnt(.@slot);
	//dispbottom "[DBG] Refine final en slot "+.@slot+" = +"+.@lastRef;
    return .@lastRef;

	//----------------------------------------------------------
	// ■ Rate – % de éxito
	//----------------------------------------------------------
Rate:
	// args: (0) item_type, (1) weapon_lvl_group (1–4), (2) current_plus
    .@t   = getarg(0);
    .@lvl = getarg(1);
    .@cur = getarg(2);

    // — Armor rates (IT_ARMOR) —
    if (.@t == IT_ARMOR) {
        switch (.@cur) {
            case 0: case 1: case 2: case 3: return 100;  // always 100% hasta +4
            case 4: return 60;  // +4→+5
            case 5: return 40;  // +5→+6
            case 6: return 30;  // +6→+7
            case 7: return 20;  // +7→+8
            case 8: return 10;  // +8→+9
            case 9: return 5;   // +9→+10
        }
        return 0;
    }

    // — Weapon Lv.1 group —
    if (.@lvl == 1) {
        switch (.@cur) {
            case 0: case 1: case 2: case 3: case 4: case 5: case 6:
                return 100;     // +0…+6 →100%
            case 7: return 60;   // +7→+8
            case 8: return 40;   // +8→+9
            case 9: return 20;   // +9→+10
        }
        return 0;
    }

    // — Weapon Lv.2 group —
    if (.@lvl == 2) {
        switch (.@cur) {
            case 0: case 1: case 2: case 3: case 4:
                return 100;     // +0…+4 →100%
            case 5: return 50;   // +5→+6
            case 6: return 60;   // +6→+7
            case 7: return 40;   // +7→+8
            case 8: return 20;   // +8→+9
            case 9: return 20;   // +9→+10
        }
        return 0;
    }

    // — Weapon Lv.3 group —
    if (.@lvl == 3) {
        switch (.@cur) {
            case 0: case 1: case 2: case 3: case 4:
                return 100;     // +0…+4 →100%
            case 5: return 50;   // +5→+6
            case 6: return 30;   // +6→+7
            case 7: return 20;   // +7→+8
            case 8: return 15;   // +8→+9
            case 9: return 10;   // +9→+10
        }
        return 0;
    }

    // — Weapon Lv.4 group (default) —
    switch (.@cur) {
        case 0: case 1: case 2: case 3:
            return 100;     // +0…+4 →100%
        case 4: return 50;   // +4→+5
        case 5: return 40;   // +5→+6
        case 6: return 30;   // +6→+7
        case 7: return 15;   // +7→+8
        case 8: return 10;   // +8→+9
        case 9: return 5;    // +9→+10
    }

    return 0;
}
